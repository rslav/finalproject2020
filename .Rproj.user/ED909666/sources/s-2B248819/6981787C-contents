# Final presentation

Element 1) Density plots of each variable (Rose)
Describing the data, univariate requirement
Will include a table of min, max, SD

```{r, echo=FALSE, results='hide'}
library(lwgeom)
library(geojsonio)
library(ggplot2)
library(gridExtra)
library(cowplot)
#Rose's code for showing density plots and categorical lolliplots

#Step 1, bring in the data, create data frame
data <- read.csv("eardata.csv")
data <- as.data.frame(data)

#Step 2, create density plots for indicies with median line
library(ggplot2)
Ginibase=ggplot(data,aes(x = Gini))+stat_density(geom = "line")+theme_classic()+labs(x='Inequality', y= NULL)+geom_vline(aes(xintercept=median(Gini)),
            color="gray", linetype="dashed", size=.5)

Justicebase=ggplot(data,aes(x = JusticeIndex))+stat_density(geom = "line")+theme_classic()+labs(x='Justice', y= NULL)+geom_vline(aes(xintercept=median(JusticeIndex)),
            color="gray", linetype="dashed", size=.5)

PHIbase=ggplot(data,aes(x = PHI))+stat_density(geom = "line")+theme_classic()+labs(x='Pregnancy Health', y= NULL)+geom_vline(aes(xintercept=median(PHI)),
            color="gray", linetype="dashed", size=.5)

Dependencybase=ggplot(data,aes(x=DependencyScore))+stat_density(geom = "line")+theme_classic()+labs(x='Federal Dependency', y=NULL)+geom_vline(aes(xintercept=median(DependencyScore)),
            color="gray", linetype="dashed", size=.5)

#Combining into one plot
library(ggpubr)

DensityAll <-ggarrange(Ginibase,Justicebase,PHIbase,Dependencybase, ncol = 1,nrow = 4)

DensityAll2 = annotate_figure(DensityAll,
                            top = text_grob("Distribution of Indicies: Positive Skew for Justice, Pregnancy Health, and Federal Dependency",
                                            face = "bold", size = 11),
                            bottom = text_grob("Sources: ACS, 2010; National Center for Access to Justice, 2016; CDC, 2017; Guttmacher Institute, 2014; FEDERAL DEPENDENCY SOURCE", 
                                               hjust = 1, x = 1,
                                               face = "italic", 
                                               size = 8),
                            left = 'Density',
                            right = NULL)

DensityAll2
```



Element 2) Correlation between indices (Ellen)
Shows relationship between indices, bivariate continuous continuous requirement

Health by Justice

```{r, echo=FALSE, results='hide'}

a=ggplot(data, aes(x=JusticeIndex, y=PHI)) + geom_point()+
  geom_smooth(method=lm) + labs(x="Justice", y="Pregnancy Health") + theme_classic()

b=ggplot(data, aes(x=Gini, y=PHI)) + geom_point()+
  geom_smooth(method=lm) + labs(x="Inequality", y="Pregnancy Health") + theme_classic()

c=ggplot(data, aes(x=JusticeIndex, y=Gini)) + geom_point()+
  geom_smooth(method=lm) + labs(x="Justice", y="Inequality") + theme_classic()

library(ggpubr)

multireg = ggarrange(a,b,c,ncol = 3,nrow = 1)

title <- expression(atop(bold("Trends by Indices"), scriptstyle("Note: pregnancy health increases with justice and decreases with higher inequality")))
multireg2 = annotate_figure(multireg,
                            top = text_grob(title,
                                            face = "bold", size = 16),
                            bottom = text_grob("Sources: ACS, 2010; National Center for Access to Justice, 2016; CDC, 2017; Guttmacher Institute, 2014",
                                               hjust = 1, x = 1,
                                               face = "italic",
                                               size = 10),
                            left = 'Density',
                            right = NULL)


multireg2
```

Element 3) Variation of indices between regions (Rose) - take out dependency
Shows relationships between categories, bivariate cat-cat requirement 

```{r, echo=FALSE, results='hide'}
#Step 4, create lolliplots comparing Inequality and Pregnancy Health (most intersting comparisson)

#Create data frame - Inequality
summary(data$Gini)
data$GiniGroup =cut(data$Gini,
                          breaks = c(0.4,0.452,0.4673,0.4789,0.53),
                          #labels = c("1st Quartile","2nd Quartile","3rd Quartile", "4th Quartile"))
                          labels = c("Low"," ","  ","High"))

#marginal data frame - Inequality 
(GiniRegion=table(data$GiniGroup,data$Region))

GiniRegion_mgcol=prop.table(GiniRegion,
                              margin = 2)

GiniRegion_df<-as.data.frame(GiniRegion)
names(GiniRegion_df)
names(GiniRegion_df)<-c("GiniGroup","Region","Count")

GiniRegion_df$pctCol=as.data.frame(GiniRegion_mgcol)[,3]
head(GiniRegion_df)

#Create data frame - Pregnancy Health
summary(data$PHI)
data$PHIGroup =cut(data$PHI,
                          breaks = c(0.17,0.2062,0.2273,0.2541,0.33),
                          #labels = c("1st Quartile","2nd Quartile","3rd Quartile", "4th Quartile"))
                          labels = c("Low"," ","  ", "High"))

#marginal data frame - Pregnancy Health
(PHIRegion=table(data$PHIGroup,data$Region))

PHIRegion_mgcol=prop.table(PHIRegion,
                              margin = 2)

PHIRegion_df<-as.data.frame(PHIRegion)
names(PHIRegion_df)
names(PHIRegion_df)<-c("PHIGroup","Region","Count")

PHIRegion_df$pctCol=as.data.frame(PHIRegion_mgcol)[,3]
head(PHIRegion_df)

#Create lolliplot - Inequality
lolliplotGini = 
  ggplot(GiniRegion_df, 
                 aes(x = GiniGroup,
                     y = pctCol) ) + 
  geom_segment(aes(y = 0,
                   x = GiniGroup,  
                   yend = pctCol, #ends at the pct value
                   xend = GiniGroup)) + facet_grid( ~ Region) +
  geom_point()+theme_bw()+
  labs(y= "Inequality", 
       x=NULL)+ylim(0, .9)

#Create lolloplot - Pregnancy Health
lolliplotPHI = 
  ggplot(PHIRegion_df, 
                 aes(x = PHIGroup,
                     y = pctCol) ) + 
  geom_segment(aes(y = 0,
                   x = PHIGroup,  
                   yend = pctCol, #ends at the pct value
                   xend = PHIGroup)) + facet_grid( ~ Region) +
  geom_point()+theme_bw()+
  labs(y= "Pregnancy Health", 
       x=NULL)+ylim(0, .9)

#Group and label two plots
LolliAll_1 <-ggarrange(lolliplotGini,lolliplotPHI, ncol = 1,nrow = 2)

LolliAll_2= annotate_figure (LolliAll_1,
                            top = text_grob("Pregnancy Health Best in Northeast, High Inequality and Low Pregnancy Health in South",
                                            face = "bold", size = 11),
                            bottom = text_grob("Sources: ACS, 2010; CDC, 2017; Guttmacher Institute, 2014", 
                                               hjust = 1, x = 1,
                                               face = "italic", 
                                               size = 8))

LolliAll_2
```



Element 4) Maps that show “better” states compared to federal dependency (Alex) - add in dependency
Creates super index for “good social outcomes” 
Compares this map to map of above average/below average for federal dependency and the super index

```{r include=FALSE, results='hide'}

PROJmap="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
maplink= "https://raw.githubusercontent.com/rslav/finalprojectSLAM/master/cb_2018_us_state_20m.json"

wazipMap=topojson_read(maplink,crs=PROJmap,stringsAsFactors = FALSE)


wazipMap

wazipMap=st_make_valid(wazipMap)
baseMap=ggplot(data=wazipMap) + geom_sf()
baseMap


# Load data
eardatalink = "https://raw.githubusercontent.com/rslav/finalprojectSLAM/master/eardata.csv"
eardata<- read.csv(eardatalink)
data<- as.data.frame(eardata)
```

Preparing data merge by renaming merge variable to match my data:
```{r include=FALSE, results='hide'}
data
colnames(data)[2] <- "NAME"
```

Now merge the map data to our data:
```{r include=FALSE, results='hide'}
# put map first:
# merge two data frames by ID
total <- merge(wazipMap,data,by="NAME")
total

```

```{r include=FALSE, results='hide'}
#create super index

summary(total$JusticeIndex)
#divide by 100 to get on a 0-1 scale
total$newjustice<-(total$JusticeIndex/100)

#subtract mean
summary(total$newjustice)
total$newjustice<-(total$newjustice-.3926)

#divide by SD
sd(total$newjustice)
total$newjustice <-(total$newjustice/.112602)

#a more-normally-distributed variable:
summary(total$newjustice)

#all positive values
total$newjustice <-(total$newjustice+2.1807253)
#0-1 scale
total$newjustice <-(total$newjustice/5)

#subtract mean
summary(total$Gini)
total$newgini<-(total$Gini-.4646)

#divide by SD
sd(total$newgini)
total$newgini <-(total$newgini/.02101533)

#a more-normally-distributed variable:
summary(total$newgini)
#all positive values
total$newgini <-(total$newgini+2.774167)
#0-1 scale
total$newgini <-(total$newgini/5.6)

#subtract mean
summary(total$PHI)
total$newphi<-(total$PHI-.2324)

#divide by SD
sd(total$newphi)
total$newphi <-(total$newphi/0.03823467)

#a more-normally-distributed variable:
summary(total$newphi)
#all positive values
total$newphi <-(total$newphi+1.5535638)
#0-1 scale
total$newphi <-(total$newphi/5)

total$superindex<- total$newphi+total$newjustice-total$newgini
summary(total$superindex)
```


```{r include=FALSE, results='hide'}
total$superindexhighlow =cut(total$superindex,
                          breaks = c(-0.47584,0.18394,1.04287),
                          labels = c("Low","High"))

summary(total$superindexhighlow)

summary(total$DependencyScore)
total$federaldependencyhighlow = cut(total$DependencyScore, 
                               breaks = c(10.6,37.77,85.82),
                               labels = c("Low","High"))
```

```{r include=FALSE, results='hide'}
finaldepmapall=
  ggplot(total) + 
  geom_sf(aes(fill=federaldependencyhighlow)) +
  coord_sf(xlim = c(-170, -68), 
          ylim = c(19, 70)) +
  theme_classic() +
  scale_fill_manual(values = c("#67a9cf", "#ef8a62"), 
                    name= "Federal Dependency")+ 
  theme(axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank(),
        panel.border=element_blank(),
        panel.grid.major=element_blank(),
        panel.grid.minor=element_blank(),
        plot.background=element_blank())
finaldepmapall

finaldepmapcontinental=
  ggplot(total) + 
  geom_sf(aes(fill=federaldependencyhighlow)) +
  coord_sf(xlim = c(-126, -68), 
          ylim = c(19, 50)) +
  theme_classic() +
  scale_fill_manual(values = c("#67a9cf", "#ef8a62"), 
                    name= "Federal Dependency")+ 
  theme(axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank(),
        panel.border=element_blank(),
        panel.grid.major=element_blank(),
        panel.grid.minor=element_blank(),
        plot.background=element_blank())
finaldepmapcontinental

finaldepmaphawaii=
  ggplot(total) + 
  geom_sf(aes(fill=federaldependencyhighlow)) +
  coord_sf(xlim = c(-160, -155), 
          ylim = c(18, 23)) +
  theme_classic() +
  scale_fill_manual(values = c("#67a9cf", "#ef8a62"), 
                    name= "Federal Dependency")+ 
  theme(axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank(),
        panel.border=element_blank(),
        panel.grid.major=element_blank(),
        panel.grid.minor=element_blank(),
        plot.background=element_blank(), 
        legend.position = "none")
finaldepmaphawaii

finaldepmapalaska=
  ggplot(total) + 
  geom_sf(aes(fill=federaldependencyhighlow)) +
  coord_sf(xlim = c(-170, -135), 
          ylim = c(51, 75)) +
  theme_classic() +
  scale_fill_manual(values = c("#67a9cf", "#ef8a62"), 
                    name= "Federal Dependency")+ 
  theme(axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank(),
        panel.border=element_blank(),
        panel.grid.major=element_blank(),
        panel.grid.minor=element_blank(),
        plot.background=element_blank(), 
        legend.position = "none")
finaldepmapalaska
```


```{r include=FALSE, results='hide'}
finalsupermapall=
  ggplot(total) + 
  geom_sf(aes(fill=superindexhighlow)) +
    coord_sf(xlim = c(-170, -68), 
             ylim = c(19, 70)) +
    theme_classic() +
  scale_fill_manual(values = c("#ef8a62", "#67a9cf"), 
                    name= "Super-Index Score")+ 
  theme(axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank(),
        panel.border=element_blank(),
        panel.grid.major=element_blank(),
        panel.grid.minor=element_blank(),
        plot.background=element_blank())
finalsupermapall

finalsupermapcontinental=
  ggplot(total) + 
  geom_sf(aes(fill=superindexhighlow)) +
  coord_sf(xlim = c(-126, -68), 
          ylim = c(19, 50)) +
    theme_classic() +
  scale_fill_manual(values = c("#ef8a62", "#67a9cf"), 
                    name= "Super-Index Score")+ 
  theme(axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank(),
        panel.border=element_blank(),
        panel.grid.major=element_blank(),
        panel.grid.minor=element_blank(),
        plot.background=element_blank())
finalsupermapcontinental

finalsupermaphawaii=
  ggplot(total) + 
  geom_sf(aes(fill=superindexhighlow)) +
  coord_sf(xlim = c(-160, -155), 
          ylim = c(18, 23)) +
    theme_classic() +
  scale_fill_manual(values = c("#ef8a62", "#67a9cf"), 
                    name= "Super-Index Score")+ 
  theme(axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank(),
        panel.border=element_blank(),
        panel.grid.major=element_blank(),
        panel.grid.minor=element_blank(),
        plot.background=element_blank(), 
        legend.position = "none")
finalsupermaphawaii

finalsupermapalaska=
  ggplot(total) + 
  geom_sf(aes(fill=superindexhighlow)) +
  coord_sf(xlim = c(-170, -135), 
          ylim = c(51, 75)) +
    theme_classic() +
  scale_fill_manual(values = c("#ef8a62", "#67a9cf"), 
                    name= "Super-Index Score")+ 
  theme(axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank(),
        panel.background=element_blank(),
        panel.border=element_blank(),
        panel.grid.major=element_blank(),
        panel.grid.minor=element_blank(),
        plot.background=element_blank(), 
        legend.position = "none")
finalsupermapalaska
```


```{r, echo=FALSE, results='hide'}

supermap <-
  ggdraw() +
  draw_plot(finalsupermapcontinental) +
  draw_plot(finalsupermaphawaii, x = 0.15, y = .17, width = .3, height = .3) +
  draw_plot(finalsupermapalaska, x = 0.00, y = .1, width = .45, height = .45)

depmap <-
  ggdraw() +
  draw_plot(finaldepmapcontinental) +
  draw_plot(finaldepmaphawaii,x = 0.15, y = .17, width = .3, height = .3) +
  draw_plot(finaldepmapalaska, x = 0.00, y = .1, width = .45, height = .45)

stackmap<-plot_grid(supermap, depmap, nrow = 2)

stackmap
```

Element 5) Conclusions

```{r, echo=FALSE, results='hide'}

```

